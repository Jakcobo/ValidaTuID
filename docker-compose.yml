version: "3.8"
networks: 
  stack_balanceo_default:
    driver: overlay

services:
  balanceadorw:
    image: proyectofinal-balanceadorw
    build: 
      context: ./haproxyw
      dockerfile: Dockerfile
    links:
      - portal
    ports:
      - "5080:80"
    deploy:
      placement:
        constraints:
          - node.labels.role == cliente

  balanceadors1:
    image: proyectofinal-balanceadors1
    build: 
      context: ./haproxys1
      dockerfile: Dockerfile
    links:
      - microclientes
      - micropeticiones
    ports:
      - "5081:3001"
      - "5083:3003"
    deploy:
      placement:
        constraints:
          - node.labels.role == cliente

  balanceadors2:
    image: proyectofinal-balanceadors2
    build: 
      context: ./haproxys2
      dockerfile: Dockerfile
    links:
      - microusuarios
    ports:
      - "5082:3002"
    deploy:
      placement:
       constraints:
          - node.labels.role == cliente

  portal:
    image: proyectofinal-portal
    build: 
      context: ./portal
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    links:
      - balanceadors1
      - balanceadors2
    deploy:
      placement:
        constraints:
          - node.labels.role == cliente
  
  microclientes:
    image: proyectofinal-microclientes
    build: 
      context: ./servicios/clientes
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    links:
      - peticionesdb
    deploy:
      placement:
        constraints:
          - node.labels.role == servidor

  micropeticiones:
    image: proyectofinal-micropeticiones
    build: 
      context: ./servicios/peticiones
      dockerfile: Dockerfile
    links:
      - peticionesdb
      - balanceadors2
    ports:
      - "3003:3003"
    deploy:
      placement:
        constraints:
          - node.labels.role == servidor

  microusuarios:
    image: proyectofinal-microusuarios
    build: 
      context: ./servicios/usuarios
      dockerfile: Dockerfile
    links:
      - peticionesdb
    ports:
      - "3002:3002"
    deploy:
      placement:
        constraints:
          - node.labels.role == servidor

  peticionesdb:
    image: proyectofinal-peticionesdb
    build: 
      context: ./peticionesdb/
      dockerfile: Dockerfilemysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "32000:3306"
    volumes:
      - peticionesdb:/var/lib/mysql
      - ./peticionesdb/init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      placement:
        constraints:
          - node.labels.role == servidor
  
  insertadditionaldata:
    image: proyectofinal-insertadditionaldata
    build: 
      context: ./peticionesdb/
      dockerfile: Dockerfile
    links:
      - peticionesdb

volumes:
  peticionesdb: